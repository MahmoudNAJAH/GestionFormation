@using GestionFormation.Models

@model GestionFormation.Models.PartageFichierModel

@Styles.Render("~/Content/PartageFichier.css")

@section scripts
{
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")

    @Scripts.Render("~/Scripts/dotdotdot-js-master/dist/dotdotdot.js")

    <script>
        $(document).ready(function () {
            $("#SessionCursus").change(function () {
                if ($("#SessionCursus").val() != "") SessionCursus();
                else $("#Details").html("");
            });
        });

        function SessionCursus() {
            const obj = {
                dirPath: $("#SessionCursus").val(),
            }

            GetDetails(obj);
        };

        function RefreshDetails(param) {
            const obj = {
                dirpath: param,
            }

            GetDetails(obj);
        };

        function PreviousFolder(param) {
            const obj = {
                dirPath: param,
            }

            const options = {
                method: 'POST',
                body: JSON.stringify(obj),
                headers: {
                    'Content-Type': 'application/json'
                }
            }

            fetch("/PartageFichier/PreviousFolder", options)
                .then(function (response) {
                    // The API call was successful!
                    return response.text();
                }).then(function (html) {
                    $("#Details").html(html);
                    return $("#Details");
                }).then(function (html) {
                    GetDotDotDot();
                    GetImageSrc();
                }).catch(function (err) {
                    // There was an error
                    console.warn('Something went wrong.', err);
                });
        }

        function GetDetails(obj) {
            const options = {
                method: 'POST',
                body: JSON.stringify(obj),
                headers: {
                    'Content-Type': 'application/json'
                }
            }

            fetch("/PartageFichier/Details", options)
                .then(function (response) {
                    // The API call was successful!
                    return response.text();
                }).then(function (html) {
                    $("#Details").html(html);
                    return $("#Details");
                }).then(function (html) {
                    GetDotDotDot();
                    GetImageSrc();
                })
                .catch(function (err) {
                    // There was an error
                    console.warn('Something went wrong.', err);
                });
        }

        function GetImageSrc() {
            let images = document.querySelectorAll(".icon-partageFichier-file");
            images.forEach(function (img) {
                switch (img.name) {
                    case 'txt':
                        img.src = "/Images/Img_PartageFichier/txt.png";
                        break;
                    case 'pdf':
                        img.src = "/Images/Img_PartageFichier/pdf.png";
                        break;
                    case 'csv':
                        img.src = "/Images/Img_PartageFichier/csv.png";
                        break;
                    default:
                        img.src = "/Images/Img_PartageFichier/file.png";
                }
            });
        }

        function GetDotDotDot() {
            let wrapper = document.querySelectorAll(".partage-fichier-icon-texte");
            wrapper.forEach(function (w) {
                let options = {
                    callback: function (isTruncated) { },
                    ellipsis: "\u2026 ",
                    height: null,
                    keep: null,
                    tolerance: 0,
                    truncate: "letter",
                    watch: "window",
                };
                try {
                    new Dotdotdot(w, options);
                }
                catch{
                    console.error(w.innerHTML);
                }
            });
        }

    </script>
}

<div class="partage-fichier-header">
    <p>Sélectionner la Session de Cursus</p>

    <select name="SessionCursus" id="SessionCursus">
        <option value="">Sélectionnez votre Session de Cursus</option>
        @foreach (var item in Model.listSessionCursus)
        {
            <option value="@item.Id"> @item.Nom </option>
        }
    </select>
</div>

<div id="Details">
    <!-- De base, le model de détail est vide car on a pas sélectionné de SessionDeCursus -->
    @Html.Partial("_Details", Model.DirectoryModel)
</div>


