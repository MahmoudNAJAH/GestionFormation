@using System.Globalization;
@model DateTime

@{
    //Pour mettre la première lettre du mois et des jours en majuscule
    TextInfo textInfo = new CultureInfo("fr-FR").TextInfo;

    //Pour remplir le tabeau avec les numéro jours
    bool start = false; //Détermine quand on peut commencer le remplissage
    int compteur = 1;   //Le numéro du jours que sera affiché

    //Pour set la class des liens vers l'EmploiDutempsController
    string classLink;

}

<div class="edt-month">

    @*Entête du clandrier
        Boutons ajax pour ne pas recharger la page si on veut naviguer dans le calendrier*@
    <div class="edt-month-header">
        @Ajax.ActionLink(
                    "<",                        // texte à afficher
                    "NextMonth/" + "-1",        // Action
                    "EmploiDuTemps",            // Controller

                    // les options
                    new AjaxOptions
                    {
                        UpdateTargetId = "_EdtMonth",           // id de l'élément du DOM à modifier
                        InsertionMode = InsertionMode.Replace,  // stratégie de remplissage de la cible du DOM
                        HttpMethod = "GET"                      // Méthode HTTP
                    }
        )

        <span class="edt-month-header-titre">@(textInfo.ToTitleCase(((DateTime)Model).ToString("MMMM yyyy")))</span>

        @Ajax.ActionLink(
                    ">",                // texte à afficher
                    "NextMonth/" + "1",         // Action
                    "EmploiDuTemps",    // Controller

                    // les options
                    new AjaxOptions
                    {
                        UpdateTargetId = "_EdtMonth",           // id de l'élément du DOM à modifier
                        InsertionMode = InsertionMode.Replace,  // stratégie de remplissage de la cible du DOM
                        HttpMethod = "GET"                      // Méthode HTTP
                    }
        )
    </div>

    <table class="edt-mois">

        <!-- Header du tableau -> Jours de la semaine -->
        <tr class="edt-header-semaine">

            <th class="edt-mois-column edt-mois-column-header">
                L
            </th>
            <th class="edt-mois-column edt-mois-column-header">
                M
            </th>
            <th class="edt-mois-column edt-mois-column-header">
                M
            </th>
            <th class="edt-mois-column edt-mois-column-header">
                J
            </th>
            <th class="edt-mois-column edt-mois-column-header">
                V
            </th>
            <th class="edt-mois-column edt-mois-column-header">
                S
            </th>
            <th class="edt-mois-column edt-mois-column-header">
                D
            </th>
        </tr>

        @* On boucle sur les lignes du calendrier
            Les jours sont répartis sur un maximum de 6 semaines distinctes*@
        @for (int ligne = 0; ligne < 6; ligne++)
        {
    <tr>
        @* On boucle sur les 7 jours d'une semaine ie les 7 colonnes du tableau *@
        @for (int index_jours = 0; index_jours < 7; index_jours++)
        {
            //DayOfWekk : Dimanche = 0 .... Samedi = 6
            //On remet les jours dans l'ordre : Lundi = 0 ...... dimanche = 6 pour comparer avec index_jours par la suite
            int joursSemaine = (int)(new DateTime((int)Model.Year, (int)Model.Month, 1).DayOfWeek) == 0 ? 6 : (int)(new DateTime((int)Model.Year, (int)Model.Month, 1).DayOfWeek) - 1;

            @* joursSemaine est le numéro de notre model dans la semaine
            Sur la deuwximème ligne de notre tableau (pas oublier l'entête) (première itération de ligne), 
            Quand on arrive dans la colonne correspondant au jours de notre model (index_jours)
            On peut commencer le remplissage => start = true*@
            if (joursSemaine == index_jours) { start = true; }
            @* Si on a commencer le remplissage et que compteur est > au nombre de jours dans le mois étudié, on arrête *@
            if (start == true && compteur > DateTime.DaysInMonth((int)Model.Year, (int)Model.Month)) { start = false; }

            <td class="edt-mois-column">

                @if (start == true)
                {
                    @* Pour l'initialiser à chaque nouvel itération *@
                    <script>@(classLink = "edt-mois-btn-jours")</script>

                    @* Si c'est un jours férié, on ajoue une classe pour un style css personnalisé *@
                    if (((DateTime)TempData["dateReference"]).ToString("dd/MM/yyyy") == new DateTime((int)Model.Year, (int)Model.Month, compteur).ToString("dd/MM/yyyy")) { classLink += "  edt-mois-btn-jours-reference"; }

                    @Html.ActionLink($"{compteur}", "NextWeek", "EmploiDuTemps", new { dateReference = new DateTime((int)Model.Year, (int)Model.Month, compteur) }, new { @class = $"{classLink}" })

                    <!-- Dans un script pour qu'il ne soit pas visible -->
                    <!-- Après le link sinon l'incrémentation sera pris en compte dedans -->
                    <script> @(compteur++) </script>
                }
            </td>
        }
    </tr>
        }
    </table>
</div>
