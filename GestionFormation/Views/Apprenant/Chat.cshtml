@model GestionFormation.DTO.UserForChatDTO
@{
    ViewBag.Title = "Chat";
}

<h2>Chat</h2>
@if (Model.ListeDesSalons == null || Model.ListeDesSalons.Count() == 0)
{
    <p>Vous n'est inscrit à aucune formation! Le chat ne vous est pas accessible...</p>
}
else
{

    if (Model.SalonSelectionne == null)
    {
        using (Html.BeginForm("ShowChat", "Apprenant", FormMethod.Post))
        {

            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <div>
                    <h1>Se connecter au chat :</h1>
                    @Html.EditorFor(model => model.Prenom_N_, new { htmlAttributes = new { @class = "form-control, hidden" } })
                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control, hidden" } })

                    <input type="hidden" id="displayname" value="@Model.Prenom_N_" />
                    <input type="hidden" id="senderId" value=@Model.Id />
                    <input type="hidden" id="salonId" value=@Model.SalonSelectionne />
                    <div class="form-group">
                        @Html.LabelFor(model => model.SalonSelectionne, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(x => Model.SalonSelectionne, new SelectList(Model.ListeDesSalons, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "group" })

                        </div>
                    </div>
                    <input type="submit" value="connexion" class="btn btn-default" />
                </div>
            </div>
        }
    }
    else
    {
<div class="container col-md-5 d-flex flex-column justify-content-center">
    <label id="usersConnected"></label>
    <div id="discussion" style="overflow-y: scroll; max-height:500px">
    </div>
    <div class="col-12">

        <div style="padding-top:15px" class="input-group">
            <input type="text" id="message" class="form-control" />

            <span class="input-group-btn">
                <input type="button" id="sendmessage" value="Envoyer" class="btn btn-primary" />
            </span>

            <input type="hidden" id="displayname" value="@Model.Prenom_N_" />
            <input type="hidden" id="senderId" value=@Model.Id />
            <input type="hidden" id="salonId" value=@Model.SalonSelectionne />
        </div>
        </div>


    </div>


    <div class="row"></div>
    @section scripts {
        <!--Script references. -->
        <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
        <!--Reference the SignalR library. -->
        <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
        <!--Reference the autogenerated SignalR hub script. -->
        <script src="~/signalr/hubs"></script>
        <!--SignalR script to update the chat page and send messages.-->


        <script>
                var messageBody = document.querySelector('#discussion');
                messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
                $(function () {
                    // Reference the auto-generated proxy for the hub.
                    var chat = $.connection.chatHub;
                    // Create a function that the hub can call back to display messages.
                    chat.client.addNewMessageToPage = function (name, message, date) {
                        // Add the message to the page.
                        if (name == $('#displayname').val()) {
                            $('#discussion').append(

                                `<div class="panel panel-success" style="margin-right:10px">
                                            <div class= "panel-heading">
                                                <div class="row">
                                                    <div class="col-md-6"><strong class="text-success"> Vous</strong></div> <div class="col-md-6 text-right">${htmlEncode(date)} </div>
                                                </div>
                                            </div>
                                            <div class="panel-body">${htmlEncode(message)}</div>
                                        </div>
                                          `);
                        } else {
                            $('#discussion').append(
                                `<div class="panel panel-info" style="margin-right:10px">
                                            <div class= "panel-heading">
                                                <div class="row">
                                                    <div class="col-md-6"><strong class="text-primary">${htmlEncode(name)} </strong> </div> <div class="col-md-6 text-right">${htmlEncode(date)} </div>
                                                </div>
                                            </div>
                                            <div class="panel-body">${htmlEncode(message)}</div>
                                        </div>
                                          `);


                        }
                        // conserver le scroll en bas de page
                        messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;

                    };

                    chat.client.sendListName = function (listName) {


                        $('#usersConnected').text(listName);

                    }
                    // Get the user name and store it to prepend to messages.
                    //$('#displayname').val(prompt('Enter your name:', ''));
                    // Set initial focus to message input box.
                    $('#message').focus();
                    // Start the connection.
                    $.connection.hub.start().done(function () {
                        
                        chat.server.recuperatioDesMessagesEnBDD($('#salonId').val());
                        // ajout de l'envoi en appuyant sur "Entree"
                        $('#message').keyup(({ key }) => {
                            if (key === "Enter") {
                                // Call the Send method on the hub.
                                chat.server.send($('#displayname').val(), $('#message').val(), $('#salonId').val(), $('#senderId').val());
                                //chat.server.send($('#displayname').val(), $('#message').val(), $('#salonId').val());
                                // Clear text box and reset focus for next comment.
                                $('#message').val('').focus();
                            }
                        })
                        $('#sendmessage').click(function () {

                            // Call the Send method on the hub.
                            chat.server.send($('#displayname').val(), $('#message').val(), $('#salonId').val(), $('#senderId').val());

                            // Clear text box and reset focus for next comment.
                            $('#message').val('').focus();
                        });

                        console.log($('#displayname').val());
                        console.log('hey!');

                        chat.server.joinRoom($('#salonId').val(), $('#displayname').val());

                    });
                });
                // This optional function html-encodes messages for display in the page.
                function htmlEncode(value) {
                    var encodedValue = $('<div />').text(value).html();
                    return encodedValue;
                }
            
        </script>

    }


    }
    }
